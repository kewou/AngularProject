{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\nfunction InscriptionComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class InscriptionComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.user = {\n      name: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      password: \"\"\n    };\n    this.backendUrl = environment.backendUrl;\n    this.errorMessage = null;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  ngOnInit() {}\n  registerSubmit() {\n    debugger;\n    this.errorMessage = null;\n    if (this.user.name === '' || this.user.lastName === '' || this.user.phone === '' || this.user.email === '' || this.user.password === '') {\n      this.errorMessage = \"Veuillez remplir tous les champs requis.\";\n      return;\n    }\n    const url = `${this.backendUrl}/users/create`;\n    this.http.post(url, this.user, this.httpOptions).subscribe(response => {\n      console.log('Réponse du serveur :', response);\n      // Gérez ici la réponse du serveur en cas de succès\n      this.router.navigate(['/connexion']); // Redirection vers la page de connexion\n    }, error => {\n      console.error('Erreur lors de l\\'envoi de la requête :', error);\n      this.errorMessage = \"Une erreur s'est produite :\" + error;\n    });\n  }\n}\n_class = InscriptionComponent;\n_class.ɵfac = function InscriptionComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-inscription\"]],\n  decls: 18,\n  vars: 6,\n  consts: [[3, \"submit\"], [1, \"form-field\"], [\"matInput\", \"\", \"placeholder\", \"Nom\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Pr\\u00E9nom\", \"name\", \"lastName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"T\\u00E9l\\u00E9phone\", \"name\", \"phone\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Mot de passe\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"error-message\"]],\n  template: function InscriptionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\")(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function InscriptionComponent_Template_form_submit_2_listener() {\n        return ctx.registerSubmit();\n      });\n      i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function InscriptionComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.user.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function InscriptionComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.user.lastName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"mat-form-field\", 1)(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function InscriptionComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 1)(10, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function InscriptionComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.user.phone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-icon\", 6);\n      i0.ɵɵtext(12, \"phone\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"mat-form-field\", 1)(14, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function InscriptionComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, InscriptionComponent_div_15_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementStart(16, \"button\", 9);\n      i0.ɵɵtext(17, \"INSCRIPTION\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.lastName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.phone);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.MatInput, i6.MatFormField, i6.MatSuffix, i7.MatCard, i7.MatCardContent, i8.MatButton, i9.MatIcon],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nform[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%] {\\n  background-color: #e13652;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\nform[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\n#mat-input-2[_ngcontent-%COMP%]::placeholder {\\n  color: black;\\n  font-style: italic;\\n}\\n\\n#mat-input-3[_ngcontent-%COMP%]::placeholder {\\n  color: black;\\n  font-style: italic;\\n}\\n\\n#mat-input-4[_ngcontent-%COMP%]::placeholder {\\n  color: black;\\n  font-style: italic;\\n}\\n\\n#mat-input-5[_ngcontent-%COMP%]::placeholder {\\n  color: black;\\n  font-style: italic;\\n}\\n\\n#mat-input-6[_ngcontent-%COMP%]::placeholder {\\n  color: black;\\n  font-style: italic;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: red;\\n  margin-top: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW5zY3JpcHRpb24vaW5zY3JpcHRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBR0E7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7QUFBRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUNBO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0FBRUY7O0FBQUE7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7QUFHRjs7QUFBQTtFQUNFLFVBQUE7RUFDQSxlQUFBO0FBR0YiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuZm9ybSBkaXYge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG5mb3JtIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxMzY1MjtcbiAgYm9yZGVyOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmZvcm0gYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl06aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xufVxuXG4jbWF0LWlucHV0LTI6OnBsYWNlaG9sZGVye1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuXG4jbWF0LWlucHV0LTM6OnBsYWNlaG9sZGVye1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbiNtYXQtaW5wdXQtNDo6cGxhY2Vob2xkZXJ7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuI21hdC1pbnB1dC01OjpwbGFjZWhvbGRlcntcbiAgY29sb3I6IGJsYWNrO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4jbWF0LWlucHV0LTY6OnBsYWNlaG9sZGVye1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLmVycm9yLW1lc3NhZ2Uge1xuICBjb2xvcjogcmVkO1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,gCAAgC;;;;;;;;;;;;;ICctDC,+BAAgD;IAC9CA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,oDACF;;;ADRN,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,IAAgB,EAASC,MAAc;IAAvC,SAAI,GAAJD,IAAI;IAAqB,WAAM,GAANC,MAAM;IALnD,SAAI,GAAS;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAG;IAEpE,eAAU,GAAGV,WAAW,CAACW,UAAU;IAC3C,iBAAY,GAAkB,IAAI;IAQlC,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIb,WAAW,CAAC;QACrB,cAAc,EAAE;OACnB;KACF;EATD;EAEAc,QAAQ,IACR;EAQAC,cAAc;IACZ;IACA,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,IAAI,CAACC,IAAI,CAACV,IAAI,KAAG,EAAE,IAAI,IAAI,CAACU,IAAI,CAACT,QAAQ,KAAG,EAAE,IAAI,IAAI,CAACS,IAAI,CAACP,KAAK,KAAG,EAAE,IAAI,IAAI,CAACO,IAAI,CAACR,KAAK,KAAG,EAAE,IAAG,IAAI,CAACQ,IAAI,CAACN,QAAQ,KAAG,EAAE,EAAE;MAC5H,IAAI,CAACK,YAAY,GAAG,0CAA0C;MAC9D;;IAEA,MAAME,GAAG,GAAG,GAAG,IAAI,CAACN,UAAU,eAAe;IAC7C,IAAI,CAACP,IAAI,CAACc,IAAI,CAACD,GAAG,EAAE,IAAI,CAACD,IAAI,EAAC,IAAI,CAACG,WAAW,CAAC,CAACC,SAAS,CACvDC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC;MAC7C;MACE,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,EACAC,KAAK,IAAI;MACRH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,IAAI,CAACV,YAAY,GAAC,6BAA6B,GAAGU,KAAK;IACzD,CAAC,CACF;EACH;;SAtCSvB,oBAAoB;;mBAApBA,MAAoB;AAAA;;QAApBA,MAAoB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZjC7B,gCAAU;MAEAA;QAAA,OAAU8B,oBAAgB;MAAA,EAAC;MAC/B9B,yCAAmC;MACCA;QAAA;MAAA,EAAqB;MAAvDA,iBAA6E;MAE/EA,yCAAmC;MACIA;QAAA;MAAA,EAAyB;MAA9DA,iBAAwF;MAE1FA,yCAAmC;MACgBA;QAAA;MAAA,EAAsB;MAAvEA,iBAA8F;MAEhGA,yCAAmC;MACqBA;QAAA;MAAA,EAAsB;MAA5EA,iBAAmG;MAAAA,oCAAoB;MAAAA,sBAAK;MAAAA,iBAAW;MAEzIA,0CAAmC;MAC0BA;QAAA;MAAA,EAAyB;MAApFA,iBAA8G;MAEhHA,uEAEM;MACNA,kCAAwD;MAAAA,4BAAW;MAAAA,iBAAS;;;MAjBxCA,eAAqB;MAArBA,uCAAqB;MAGlBA,eAAyB;MAAzBA,2CAAyB;MAGbA,eAAsB;MAAtBA,wCAAsB;MAGjBA,eAAsB;MAAtBA,wCAAsB;MAGjBA,eAAyB;MAAzBA,2CAAyB;MAEhFA,eAAkB;MAAlBA,uCAAkB","names":["HttpHeaders","environment","i0","InscriptionComponent","constructor","http","router","name","lastName","email","phone","password","backendUrl","headers","ngOnInit","registerSubmit","errorMessage","user","url","post","httpOptions","subscribe","response","console","log","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/noumia/Documents/BeezyStart_Up/AngularProject/src/app/inscription/inscription.component.ts","/home/noumia/Documents/BeezyStart_Up/AngularProject/src/app/inscription/inscription.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../user/modele/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-inscription',\n  templateUrl: './inscription.component.html',\n  styleUrls: ['./inscription.component.scss']\n})\nexport class InscriptionComponent implements OnInit {\n\n  user: User = { name: \"\", lastName: \"\", email: \"\", phone: \"\", password: \"\"  };\n\n  private backendUrl = environment.backendUrl;\n  errorMessage: string | null = null;\n\n  constructor(private http: HttpClient,private router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n    })\n  };\n\n  registerSubmit() {\n    debugger\n    this.errorMessage = null;\n    if (this.user.name==='' || this.user.lastName==='' || this.user.phone==='' || this.user.email===''|| this.user.password==='') {\n      this.errorMessage = \"Veuillez remplir tous les champs requis.\";\n      return;\n    }\n      const url = `${this.backendUrl}/users/create`;\n      this.http.post(url, this.user,this.httpOptions).subscribe(\n        response => {\n          console.log('Réponse du serveur :', response);\n          // Gérez ici la réponse du serveur en cas de succès\n            this.router.navigate(['/connexion']); // Redirection vers la page de connexion\n        },\n        (error) => {\n          console.error('Erreur lors de l\\'envoi de la requête :', error);\n          this.errorMessage=\"Une erreur s'est produite :\" + error;\n        }\n      );\n    }\n\n}\n","<mat-card>\n  <mat-card-content>\n    <form (submit)=\"registerSubmit()\">\n      <mat-form-field class=\"form-field\">\n        <input matInput placeholder=\"Nom\" [(ngModel)]=user.name name=\"name\" required>\n      </mat-form-field>\n      <mat-form-field class=\"form-field\">\n        <input matInput placeholder=\"Prénom\" [(ngModel)]=user.lastName name=\"lastName\" required>\n      </mat-form-field>\n      <mat-form-field class=\"form-field\">\n        <input matInput type=\"email\" placeholder=\"Email\" [(ngModel)]=user.email name=\"email\" required>\n      </mat-form-field>\n      <mat-form-field class=\"form-field\">\n        <input matInput type=\"number\" placeholder=\"Téléphone\" [(ngModel)]=user.phone name=\"phone\" required><mat-icon matSuffix>phone</mat-icon>\n      </mat-form-field>\n      <mat-form-field class=\"form-field\">\n        <input matInput type=\"password\" placeholder=\"Mot de passe\" [(ngModel)]=user.password name=\"password\" required>\n      </mat-form-field>\n      <div *ngIf=\"errorMessage\" class=\"error-message\">\n        {{ errorMessage }}\n      </div>\n      <button mat-raised-button color=\"primary\" type=\"submit\">INSCRIPTION</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}