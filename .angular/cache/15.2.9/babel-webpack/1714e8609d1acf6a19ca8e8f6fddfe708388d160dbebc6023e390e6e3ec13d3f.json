{"ast":null,"code":"var _class;\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../user/service/user.service\";\nimport * as i4 from \"ngx-cookie-service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/button\";\nfunction ConnexionComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class ConnexionComponent {\n  constructor(http, router, userService, cookieService) {\n    this.http = http;\n    this.router = router;\n    this.userService = userService;\n    this.cookieService = cookieService;\n    this.loginObj = {\n      username: \"\",\n      password: \"\"\n    };\n    this.backendUrl = environment.backendUrl;\n    this.errorMessage = null;\n  }\n  loginSubmit() {\n    this.errorMessage = null;\n    if (this.loginObj.username === '' || this.loginObj.password === '') {\n      this.errorMessage = \"Veuillez remplir tous les champs requis.\";\n      return;\n    }\n    const url = `${this.backendUrl}/authenticate`;\n    this.userService.loginUser(this.loginObj).subscribe(response => {\n      console.log(\"response\", response);\n      this.cookieService.set('jwtToken', response.jwtToken, undefined, undefined, undefined, true, 'Lax');\n      this.userService.connectOrDisconnect();\n      this.router.navigate(['/compte-user']);\n    }, error => {\n      if (error.status === 401) {\n        this.errorMessage = \"Login ou mot de passe incorrect !\";\n      }\n    });\n  }\n  logoutSubmit() {\n    this.userService.connectOrDisconnect();\n  }\n}\n_class = ConnexionComponent;\n_class.ɵfac = function ConnexionComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.CookieService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-connexion\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[3, \"submit\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"placeholder\", \"Mot de passe\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"error-message\"]],\n  template: function ConnexionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\")(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function ConnexionComponent_Template_form_submit_2_listener() {\n        return ctx.loginSubmit();\n      });\n      i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ConnexionComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.loginObj.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ConnexionComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.loginObj.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, ConnexionComponent_div_7_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵtext(9, \"CONNECTION\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.loginObj.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.loginObj.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.MatInput, i8.MatFormField, i9.MatCard, i9.MatCardContent, i10.MatButton],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\nform[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nform[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%] {\\n  background-color: #e13652;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\nform[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\n#mat-input-0[_ngcontent-%COMP%]::placeholder {\\n  color: black;\\n  font-style: italic;\\n}\\n\\n#mat-input-1[_ngcontent-%COMP%]::placeholder {\\n  color: black;\\n  font-style: italic;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: red;\\n  margin-top: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29ubmV4aW9uL2Nvbm5leGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFHQTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtBQUFGOztBQUdBO0VBQ0UsVUFBQTtFQUNBLGVBQUE7QUFBRiIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5mb3JtIGRpdiB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbmZvcm0gYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTEzNjUyO1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuZm9ybSBidXR0b25bdHlwZT1cInN1Ym1pdFwiXTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XG59XG5cbiNtYXQtaW5wdXQtMDo6cGxhY2Vob2xkZXJ7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5cbiNtYXQtaW5wdXQtMTo6cGxhY2Vob2xkZXJ7XG4gIGNvbG9yOiBibGFjaztcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiByZWQ7XG4gIG1hcmdpbi10b3A6IDhweDtcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;;;;;;;;;;;;ICMtDC,8BAAgD;IAC9CA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,oDACF;;;ADEN,OAAM,MAAOC,kBAAkB;EAQ7BC,YAAoBC,IAAgB,EAASC,MAAc,EAASC,WAAwB,EAASC,aAA4B;IAA7G,SAAI,GAAJH,IAAI;IAAqB,WAAM,GAANC,MAAM;IAAiB,gBAAW,GAAXC,WAAW;IAAsB,kBAAa,GAAbC,aAAa;IALlH,aAAQ,GAAQ;MAACC,QAAQ,EAAC,EAAE;MAAEC,QAAQ,EAAC;IAAE,CAAC;IAElC,eAAU,GAAGT,WAAW,CAACU,UAAU;IAC3C,iBAAY,GAAkB,IAAI;EAKlC;EAEAC,WAAW;IACT,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,IAAI,CAACC,QAAQ,CAACL,QAAQ,KAAG,EAAE,IAAI,IAAI,CAACK,QAAQ,CAACJ,QAAQ,KAAG,EAAE,EAAE;MAC9D,IAAI,CAACG,YAAY,GAAG,0CAA0C;MAC9D;;IAEF,MAAME,GAAG,GAAG,GAAG,IAAI,CAACJ,UAAU,eAAe;IAC7C,IAAI,CAACJ,WAAW,CAACS,SAAS,CAAC,IAAI,CAACF,QAAQ,CAAC,CAACG,SAAS,CAChDC,QAAY,IAAI;MACfC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAAC;MAChC,IAAI,CAACV,aAAa,CAACa,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,QAAQ,EAAEC,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC;MACnG,IAAI,CAAChB,WAAW,CAACiB,mBAAmB,EAAE;MACtC,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;IACxC,CAAC,EACAC,KAAuB,IAAI;MACxB,IAAGA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAC;QACtB,IAAI,CAACd,YAAY,GAAC,mCAAmC;;IAE3D,CAAC,CACF;EACJ;EAGAe,YAAY;IACX,IAAI,CAACrB,WAAW,CAACiB,mBAAmB,EAAE;EACvC;;SAtCYrB,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb/B/B,gCAAU;MAEAA;QAAA,OAAUgC,iBAAa;MAAA,EAAC;MAC5BhC,sCAAgB;MACeA;QAAA;MAAA,EAA+B;MAA5DA,iBAAyG;MAE3GA,sCAAgB;MACkBA;QAAA;MAAA,EAA+B;MAA/DA,iBAAqH;MAEvHA,mEAEM;MACNA,iCAAwD;MAAAA,0BAAU;MAAAA,iBAAS;;;MAR5CA,eAA+B;MAA/BA,+CAA+B;MAG5BA,eAA+B;MAA/BA,+CAA+B;MAE3DA,eAAkB;MAAlBA,uCAAkB","names":["environment","i0","ConnexionComponent","constructor","http","router","userService","cookieService","username","password","backendUrl","loginSubmit","errorMessage","loginObj","url","loginUser","subscribe","response","console","log","set","jwtToken","undefined","connectOrDisconnect","navigate","error","status","logoutSubmit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/noumia/Documents/BeezyStart_Up/AngularProject/src/app/connexion/connexion.component.ts","/home/noumia/Documents/BeezyStart_Up/AngularProject/src/app/connexion/connexion.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport { UserService } from '../user/service/user.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-connexion',\n  templateUrl: './connexion.component.html',\n  styleUrls: ['./connexion.component.scss']\n})\nexport class ConnexionComponent {\n\n\n  loginObj: any = {username:\"\", password:\"\"};\n\n  private backendUrl = environment.backendUrl;\n  errorMessage: string | null = null;\n\n  constructor(private http: HttpClient,private router: Router,private userService: UserService,private cookieService: CookieService,\n    ) {\n\n  }\n\n  loginSubmit() {\n    this.errorMessage = null;\n    if (this.loginObj.username==='' || this.loginObj.password==='') {\n      this.errorMessage = \"Veuillez remplir tous les champs requis.\";\n      return;\n    }\n    const url = `${this.backendUrl}/authenticate`;\n    this.userService.loginUser(this.loginObj).subscribe(\n      (response:any) => {\n        console.log(\"response\",response);\n        this.cookieService.set('jwtToken', response.jwtToken, undefined, undefined, undefined, true, 'Lax');\n        this.userService.connectOrDisconnect();\n        this.router.navigate(['/compte-user']);\n      },\n      (error:HttpErrorResponse) => {\n          if(error.status === 401){\n            this.errorMessage=\"Login ou mot de passe incorrect !\";\n          }\n      }\n    );\n }\n\n\n logoutSubmit(){\n  this.userService.connectOrDisconnect();\n }\n\n}\n","<mat-card>\n  <mat-card-content>\n    <form (submit)=\"loginSubmit()\">\n      <mat-form-field>\n        <input matInput type=\"email\" [(ngModel)]=\"loginObj.username\"   name=\"email\" required placeholder=\"Email\">\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"password\" [(ngModel)]=\"loginObj.password\"  name=\"password\" required placeholder=\"Mot de passe\">\n      </mat-form-field>\n      <div *ngIf=\"errorMessage\" class=\"error-message\">\n        {{ errorMessage }}\n      </div>\n      <button mat-raised-button color=\"primary\" type=\"submit\">CONNECTION</button>\n    </form>\n  </mat-card-content>\n</mat-card>\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}